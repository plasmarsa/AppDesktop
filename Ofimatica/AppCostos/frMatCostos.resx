<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC+
        CAAAAk1TRnQBSQFMAgEBAwEAAfgBAQH4AQEBEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AXwADKAE9SAADGgEkA0oBiwFQAVIBUAGkAz4Ba2wAAyYBOQE4ASwBFQH/
        A0oBjQgAAyYBOQE4ASwBFQH/A0oBjRQAAyEBMAG1ARkBBwH/AWACWgHePAADIwE0ATMBrwEvAf8BMwGv
        AS8B/wEzAa8BLwH/ATMBrwEvAf8BMwGvAS8B/wEzAa8BLwH/AVkBXAFZAc9oAANYAekDEgEZDAADWAHp
        AxIBGRAAAxQBHAG1ARkBBwH/AwcBCgFgAlwB1AFhAl0B4ggAAfkBygGQAf8B+QHKAZAB/wH5AcoBkAH/
        AfkBygGQAf8B+QHKAZAB/wH5AcoBkAH/AfkBygGQAf8QAAM3AVoBMwGvAS8B/wEzAa8BLwH/ATMBrwEv
        Af8BMwGvAS8B/wHFAeQBwwH/ATMBrwEvAf8BMwGvAS8B/wEzAa8BLwH/AVABfwFMAf5cAAMcAScBiAGW
        AQAB/wGIAZYBAAH/AYgBlgEAAf8BiAGWAQAB/wGIAZYBAAH/AYgBlgEAAf8BiAGWAQAB/wNTAaoUAAMB
        AQIIAAFcAlkBzwNfAeAvAAEBATMBrwEvAf8BMwGvAS8B/wEzAa8BLwH/AU0BuwFKCf8B6gH1AekB/wEz
        Aa8BLwH/ATMBrwEvAf8BMwGvAS8B/wNZAcdYAAJkAVMB8QJcAVkBz0MAAQEsAAFaAVwBWgHNATMBrwEv
        Af8BMwGvAS8B/wEzAa8BLwX/AbwB4QG7Af8BNAGvATAF/wGmAdYBpAH/ATMBrwEvAf8BMwGvAS8B/wEz
        Aa8BLwH/WAABiAGWAQAB/wJeAVgB3QNTAaoDUwGqA1MBqgNTAaoDUwGqA1MBqgMUARwYAAG1ARkBBwH/
        AzYBWDQAATMBrwEvAf8BMwGvAS8B/wEzAa8BLwH/ATMBrwEvAf8BigHKAYgB/wE0Aa8BMAH/ATMBrwEv
        Bf8BqAHXAaYB/wEzAa8BLwH/ATMBrwEvAf8BMwGvAS8B/wM7AWRUAAGIAZYBAAH/AYgBlgEAAf8BiAGW
        AQAB/wGIAZYBAAH/AYgBlgEAAf8BiAGWAQAB/wGIAZYBAAH/AYgBlgEAAf8BiAGWATgB/RQAAbUBGQEH
        Af8DQwF4AbUBGQEHAf8DPQFnCAAB+QHKAZAB/wH5AcoBkAH/AfkBygGQAf8B+QHKAZAB/wH5AcoBkAH/
        AfkBygGQAf8B+QHKAZAB/wwAATMBrwEvAf8BMwGvAS8B/wEzAa8BLwH/ATMBrwEvAf8BMwGvAS8B/wGn
        AdcBpQX/AfoB/AH5Af8BMwGvAS8B/wEzAa8BLwH/ATMBrwEvAf8BMwGvAS8B/wNQAZ5UAAGIAZYBAAH/
        AYgBlgEAAf8UAAMBAQIBiAGWAQAB/wMQARYQAANBAXIHAAEBAbUBGQEHAf8DPQFnBAADNQFVAzUBVQM1
        AVUDNQFVAzUBVQM1AVUDNQFVDAABMwGvAS8B/wEzAa8BLwH/ATMBrwEvAf8BMwGvAS8B/wG3Ad4BtQX/
        AVMBvgFQAf8BMwGvAS8B/wEzAa8BLwH/ATMBrwEvAf8BMwGvAS8B/wEzAa8BLwH/A0gBg1QAAYgBlgEA
        Af8CSAFHAYMIAANAAXADHQEpCAACXAFVAeoCYAFZAesfAAEBAzMBUywAATMBrwEvAf8BMwGvAS8B/wEz
        Aa8BLwH/ATMBrwEvAf8B+AH8AfgB/wHOAekBzQH/ATMBrwEvBf8BtgHeAbUB/wEzAa8BLwH/ATMBrwEv
        Af8BMwGvAS8B/wMYASFQAAMHAQoBiAGWAQAB/wgAA0ABcAEAAR8C/wEAAR8C/wMdASkEAAMRARcBiAGW
        AQAB/wMBAQIQAAFYAlYBuwMBAQI0AAM9AWcBMwGvAS8B/wEzAa8BLwH/ATMBrwEvAf8BmwHSAZkN/wE7
        AbIBNwH/ATMBrwEvAf8BMwGvAS8B/wEzAa8BLwH/VAACUwFSAagBiAGWAQAB/w0AAR8C/wNTAaoMAAJ/
        AQAB/gJbAVkBxAwAA1sByAFlAlIB9AG1ARkBBwH/AwQBBQgAA1YBqwNWAasDVgGrA1YBqwNWAasDVgGr
        A1YBqxAAAVEBbQFRAfcBMwGvAS8B/wEzAa8BLwH/ATMBrwEvAf8BTQG7AUoB/wHZAe0B2AH/ATYBsAEy
        Af8BMwGvAS8B/wEzAa8BLwH/ATMBrwEvAf8DIwEzTAADMwFTA1UBtQGIAZYBAAH/AkUBRAF8DQABHwL/
        A1MBqgwAAxgBIQI1ATQBVQgAAwoBDgFiAlgB7wQAAzgBXgG1ARkBBwH/AwIBAwQAAfkBygGQAf8B+QHK
        AZAB/wH5AcoBkAH/AfkBygGQAf8B+QHKAZAB/wH5AcoBkAH/AfkBygGQAf8UAAFHAXQBRwH5ATMBrwEv
        Af8BMwGvAS8B/wEzAa8BLwH/AVoBwQFXAf8BMwGvAS8B/wEzAa8BLwH/ATMBrwEvAf8DOgFiUAADUAGe
        AUIBiAEAAf8CYQFcAdwRAAEfAv8DUwGqLAADMQFPAWECXgHaOAADOwFjATMBrwEvAf8BMwGvAS8B/wEz
        Aa8BLwH/ATMBrwEvAf8BXAFgAVwB1AMBAQL/AP8AUgABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEA
        AQEFAAGAFwAD/wEABv8CAAL/Ae8B/wH8AT8CAAH4AscB/wHwAQ8CAAH8AecBgwEBAeABBwIAAfABBwHZ
        Af8BwAEDAgAB8wH/Af0B/wHAAQMCAAHwAQcB5wH/AcABAQIAAfABBwHDAQEBwAEBAgAB8wHjAdEBAQHA
        AQECAAHzATMB+QH/AcABAQIAAeYBEQHnAf8BwAEDAgAB5wE5AcMBAQHgAQMCAAGHATkBkQEBAfABBwIA
        AY8BPwH5Af8B+AEPAgAG/wIABv8CAAs=
</value>
  </data>
</root>